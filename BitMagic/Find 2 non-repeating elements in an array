//function1
int getbit(int n, int pos)
{
  return ((n & (1 << pos)) != 0);
}

//function2
void twoUnique(int arr[], int n)
{
  int xorsum = 0;
  for (int i = 0; i < n; i++)
  {
    xorsum = xorsum ^ arr[i];
  }
  int temp = xorsum;
  int setBit = 0;
  int pos = 0;
  while (setBit != 1)
  {
    setBit = xorsum & 1;
    pos++;
    xorsum = xorsum >> 1;
  }
  int newxor = 0;
  for (int i = 0; i < n; i++)
  {
    if (getbit(arr[i], pos - 1)) //function 1 call
    {
      newxor = newxor ^ arr[i];
    }
  }
  cout << newxor << endl;
  cout << (temp ^ newxor) << endl;
}
